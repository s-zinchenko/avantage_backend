# Generated by Django 5.0.3 on 2024-03-23 08:49

import avantage_backend.core.models
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Award',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveIntegerField(verbose_name='Год')),
                ('title_ru', models.CharField(max_length=256, verbose_name='Название (Ru)')),
                ('title_en', models.CharField(max_length=256, verbose_name='Название (En)')),
                ('place', models.CharField(max_length=256, verbose_name='Место')),
                ('nomination_ru', models.CharField(max_length=256, verbose_name='Номинация (Ru)')),
                ('nomination_en', models.CharField(max_length=256, verbose_name='Номинация (En)')),
                ('event', models.CharField(max_length=256, verbose_name='Мероприятие')),
                ('attachment', models.FileField(upload_to='', verbose_name='ЗD модель награды')),
                ('show_on_main_page', models.BooleanField(default=False, verbose_name='Показывать на главной странице')),
            ],
            options={
                'verbose_name': 'Награда',
                'verbose_name_plural': 'Награды',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('greeting_title_ru', models.CharField(max_length=255, verbose_name='Приветственный заголовок (RU)')),
                ('greeting_title_en', models.CharField(max_length=255, verbose_name='Приветственный заголовок (EN)')),
                ('greeting_description_ru', models.TextField(verbose_name='Приветственное описание (RU)')),
                ('greeting_description_en', models.TextField(verbose_name='Приветственное описание (EN)')),
                ('about_image', models.FileField(upload_to='', verbose_name='Изображение о компании')),
                ('about_text_ru', models.TextField(verbose_name='О компании (RU)')),
                ('about_text_en', models.TextField(verbose_name='О компании (EN)')),
                ('intro_video', models.FileField(upload_to='', verbose_name='Видео')),
                ('address_ru', models.CharField(max_length=256, verbose_name='Адрес (RU)')),
                ('address_en', models.CharField(max_length=256, verbose_name='Адрес (EN)')),
                ('contact_phone', models.CharField(max_length=256, verbose_name='Контактный телефон')),
                ('contact_email', models.EmailField(max_length=254, verbose_name='Контактная почта')),
                ('telegram', models.CharField(max_length=256, verbose_name='Телеграм')),
                ('email_for_clients', models.EmailField(max_length=254, verbose_name='Email для клиентов')),
                ('email_for_mass_media', models.EmailField(max_length=254, verbose_name='Email для СМИ и партнёров')),
                ('email_for_applicant', models.EmailField(max_length=254, verbose_name='Email для соискателей')),
                ('portfolio', models.FileField(upload_to='', verbose_name='Портфолио')),
                ('requisites', models.FileField(upload_to='', verbose_name='Реквизиты')),
                ('presentation', models.FileField(upload_to='', verbose_name='Презентация')),
                ('brief', models.FileField(upload_to='', verbose_name='Бриф')),
                ('agreement', models.FileField(upload_to='', verbose_name='Согласие на обработку персональных данных')),
                ('form_for_freelancers', models.FileField(upload_to='', verbose_name='Форма для фрилансеров')),
            ],
            options={
                'verbose_name': 'Компания',
            },
        ),
        migrations.CreateModel(
            name='GalleryAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256, verbose_name='Название')),
                ('image', models.FileField(upload_to='', verbose_name='Изображение')),
            ],
            options={
                'verbose_name': 'Вложение галереи',
                'verbose_name_plural': 'Вложения галерей',
            },
        ),
        migrations.CreateModel(
            name='TeamMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_ru', models.CharField(max_length=256, verbose_name='Имя (Ru)')),
                ('name_en', models.CharField(max_length=256, verbose_name='Имя (En)')),
                ('position_ru', models.CharField(max_length=256, verbose_name='Должность (Ru)')),
                ('position_en', models.CharField(max_length=256, verbose_name='Должность (En)')),
                ('photo', models.FileField(upload_to='', verbose_name='Фото')),
            ],
            options={
                'verbose_name': 'Член команды',
                'verbose_name_plural': 'Члены команды',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='E-mail')),
                ('first_name', models.CharField(max_length=30, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=30, verbose_name='Фамилия')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
            managers=[
                ('objects', avantage_backend.core.models.UserManager()),
            ],
        ),
    ]
